# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles

default_username='jason'

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

# Adjusted to Tomorrow Night theme
ORANGE="\e[38;5;222m"
GREEN="\e[38;5;70m"
PURPLE="\e[38;5;96m"
WHITE="\e[38;5;253m"

# Have less display colours
# from: https://wiki.archlinux.org/index.php/Color_output_in_console#man
export LESS_TERMCAP_mb=$'\e[38;5;70m'    # begin bold
export LESS_TERMCAP_md=$'\e[38;5;222m'   # begin blink
export LESS_TERMCAP_so=$'\e[38;5;70m'    # begin reverse video
export LESS_TERMCAP_us=$'\e[38;5;173m'    # begin underline
export LESS_TERMCAP_me=$'\e[0m'          # reset bold/blink
export LESS_TERMCAP_se=$'\e[0m'          # reset reverse video
export LESS_TERMCAP_ue=$'\e[0m'          # reset underline

# Fastest possible way to check if repo is dirty. a savior for the WebKit repo.
function parse_git_dirty() {
   git diff --quiet --ignore-submodules HEAD 2>/dev/null; [ $? -eq 1 ] && echo '*'
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# Only show username/host if not default
function usernamehost() {
  if [ $USER != $default_username ]; then echo "\[$PURPLE\]$USER\[$WHITE\] at \[$ORANGE\]$HOSTNAME \[$WHITE\]in "; fi
}

# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash]   hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash]   \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}$PURPLE$USER$WHITE at $ORANGE$HOSTNAME $WHITEin $ORANGE\w$WHITE\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")$PURPLE\$(parse_git_branch)$WHITE\n\$ \[$RESET\]"
